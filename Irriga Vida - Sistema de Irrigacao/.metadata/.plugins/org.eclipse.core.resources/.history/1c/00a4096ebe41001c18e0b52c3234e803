package metodos_projeto;

import java.sql.SQLException;

import javax.swing.JOptionPane;

import metodos.AcessoBD;

public class FertilizanteDAO {

	private AcessoBD bd;
	private String men, sql;
	
	// Esatabelecendo o Construtor para a Classe FertilizanteDAO
	public FertilizanteDAO() {
		bd = new AcessoBD(); // instancia um objeto da Classe BD.
	}
	
	/**
	 * Armazena um Fertilizante no banco de dados.
	 * @param Fertilizante - O Fertilizante a ser gravado.
	 * @return - uma mensagem informando o resultado de uma operação.
	 */
	public String incluir(Fertilizante fertilizante) {
		
		// Verificação em console do recebimento das informações.
		System.out.println(fertilizante.getId() + fertilizante.getNome() + fertilizante.getTipo() + fertilizante.getMarca() +
				fertilizante.getPeso() + fertilizante.getObservacao() + fertilizante.getTipoAplicacao() + 
				fertilizante.getClassificacao());		

		//Instrução a ser executada no Banco de Dados.
		sql = "insert into TB_FERTILIZANTE (NOME_FERTILIZANTE, TIPO_FERTILIZANTE, MARCA_FERT, PESO_EMBALAGEM, OBSERVACAO,"
				+ "TIPO_APLIC, CLASSIF) values (?,?,?,?,?,?,?)";
		
		//Acessando o Banco de Dados.
		bd.getConnection();
		try {
			bd.st = bd.con.prepareStatement(sql);
			bd.st.setString(1, fertilizante.getNome());
			bd.st.setString(2, fertilizante.getTipo());
			bd.st.setString(3, fertilizante.getMarca());
			bd.st.setString(4, fertilizante.getPeso());
			bd.st.setString(5, fertilizante.getObservacao());
			bd.st.setString(6, fertilizante.getTipoAplicacao());
			bd.st.setString(7, fertilizante.getClassificacao());
			bd.st.executeUpdate();
			men = "Fertilizante inserido com sucesso!"; // Armazena uma informação pós execução.
		}
		
		catch(SQLException erro) {
			men = "Falha: " + erro;
		}
			
		finally {
			bd.close(); // Finaliza o Acesso ao Banco de Dados.
		}
		
		JOptionPane.showMessageDialog(null, men); // Imprimi a mensagem obtida durante a opção.
		return men;
	}
	
	/**
	 * Altera um Fertilizante no banco de dados.
	 * @param Fertilizante - O Fertilizante a ser gravado.
	 * @return - uma mensagem informando o resultado de uma operação.
	 */
	public String alterar(Fertilizante fertilizante) {
		
		// Verificação em console do recebimento das informações.
				System.out.println(fertilizante.getId() + fertilizante.getNome() + fertilizante.getTipo() + fertilizante.getMarca() +
						fertilizante.getPeso() + fertilizante.getObservacao() + fertilizante.getTipoAplicacao() + 
						fertilizante.getClassificacao());	
		
		//Instrução a ser executada no Banco de Dados.
		sql = "update TB_FERTILIZANTE set NOME_FERTILIZANTE = ?, TIPO_FERTILIZANTE = ?, MARCA_FERT = ?,"
				+ " PESO_EMBALAGEM = ?, OBSERVACAO = ?, TIPO_APLIC = ?, CLASSIF = ?, where ID_EQUIPAMENTO = ?";

		//Acessando o Banco de Dados.
		bd.getConnection();
		try {
			bd.st = bd.con.prepareStatement(sql);
			bd.st.setString(1, fertilizante.getNome());
			bd.st.setString(2, fertilizante.getTipo());
			bd.st.setString(3, fertilizante.getMarca());
			bd.st.setString(4, fertilizante.getPeso());
			bd.st.setString(5, fertilizante.getObservacao());
			bd.st.setString(6, fertilizante.getTipoAplicacao());
			bd.st.setString(7, fertilizante.getClassificacao());
			bd.st.setString(8, fertilizante.getId());
			bd.st.executeUpdate();
			men = "Fertilizante Alterado com sucesso!"; // Armazena uma informação pós execução.
		}
		
		catch(SQLException erro) {
				men = "Falha: " + erro;
		}
			
		finally {
			bd.close(); // Finaliza o Acesso ao Banco de Dados.
		}
		
		JOptionPane.showMessageDialog(null, men); // Imprimi a mensagem obtida durante a opção.
		return men;
	}
	
	/**
	 * Exclui um Equipamento a partir de seu ID.
	 * @param Equipamento - o ID do Equipamento.
	 * @return - uma mensagem informando o resultado da operação.
	 */
	public String excluir(Equipamento equipamento) {
		
		// Verificação em console do recebimento das informações.
		System.out.println(equipamento.getId());
		
		//Instrução a ser executada no Banco de Dados.
		sql = "delete from TB_EQUIPAMENTO where ID_EQUIPAMENTO = ?";
		
		bd.getConnection();
		try {
			bd.st = bd.con.prepareStatement(sql);
			bd.st.setString(1, equipamento.getId());
			int n = bd.st.executeUpdate();
			
			if (n==1) {
				men = "Equipamento excluído com sucesso!"; // Armazena uma informação pós execução.
			}
			else {
				men = "Equipamento não encontrado"; // Armazena uma informação pós execução.
			}
			
			men = "Equipamento excluído com sucesso!"; // Armazena uma informação pós execução.
		}
		
		catch(SQLException erro) {
			
			men = "Erro: " + erro; // Imprimi o erro encontrado.
			
			}
		
		finally {
			bd.close();  // Finaliza o Acesso ao Banco de Dados.
		}
		
		JOptionPane.showMessageDialog(null, men); // Imprimi a mensagem obtida durante a opção.
		return men;
	}
}
