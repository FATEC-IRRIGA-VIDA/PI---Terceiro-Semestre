package telas;

import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import java.awt.Color;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.SwingConstants;
import javax.swing.JEditorPane;
import javax.swing.JButton;
import javax.swing.JTextField;
import com.toedter.calendar.JDateChooser;

import metodos.AcessoBD;
import metodos.DocumentoLimitado;
import net.proteanit.sql.DbUtils;

import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.awt.event.ActionEvent;
import javax.swing.JScrollPane;
import javax.swing.JTable;

public class Equipamentos extends JFrame {

	private JPanel contentPane;
	private JTextField textValor;
	private JTextField textDescricao;
	private JTextField textCodEquipamento;
	public static Cadastros tela3;
	public static Equipamentos tela12;
	private JTable table_equipamentos;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Equipamentos frame = new Equipamentos();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public Equipamentos() {
		setTitle("Equipamentos");
		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		setBounds(100, 100, 762, 473);
		contentPane = new JPanel();
		contentPane.setBackground(new Color(46, 139, 87));
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JPanel contentPane_1 = new JPanel();
		contentPane_1.setLayout(null);
		contentPane_1.setBorder(new EmptyBorder(5, 5, 5, 5));
		contentPane_1.setBackground(new Color(46, 139, 87));
		contentPane_1.setBounds(0, 0, 746, 434);
		contentPane.add(contentPane_1);
		
		JLabel labelSI = new JLabel("Sistema de Irriga\u00E7\u00E3o");
		labelSI.setHorizontalAlignment(SwingConstants.CENTER);
		labelSI.setForeground(Color.WHITE);
		labelSI.setFont(new Font("Arial", Font.BOLD, 14));
		labelSI.setBackground(Color.WHITE);
		labelSI.setBounds(122, 11, 168, 25);
		contentPane_1.add(labelSI);
		
		JButton btSair = new JButton("Sair");
		btSair.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				System.exit(0);
			}
		});
		btSair.setForeground(Color.WHITE);
		btSair.setFont(new Font("Arial", Font.BOLD, 12));
		btSair.setBackground(new Color(0, 128, 0));
		btSair.setBounds(10, 404, 89, 23);
		contentPane_1.add(btSair);
		
		JButton btVoltar = new JButton("Voltar");
		btVoltar.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				tela3 = new Cadastros();
				tela3.setVisible(true);
				Cadastros.tela12.setVisible(false);
				
			}
		});
		btVoltar.setForeground(Color.WHITE);
		btVoltar.setFont(new Font("Arial", Font.BOLD, 12));
		btVoltar.setBackground(new Color(0, 128, 0));
		btVoltar.setBounds(651, 401, 89, 23);
		contentPane_1.add(btVoltar);
		
		textValor = new JTextField();
		textValor.setDocument( new DocumentoLimitado(10) ); //definindo o tamanho do campo
		textValor.setFont(new Font("Arial", Font.PLAIN, 12));
		textValor.setColumns(10);
		textValor.setBounds(52, 320, 406, 20);
		contentPane_1.add(textValor);
		
		JLabel labelValor = new JLabel("Valor ");
		labelValor.setForeground(Color.WHITE);
		labelValor.setFont(new Font("Arial", Font.PLAIN, 12));
		labelValor.setBounds(10, 323, 132, 14);
		contentPane_1.add(labelValor);
		
		textDescricao = new JTextField();
		textDescricao.setDocument( new DocumentoLimitado(50) ); //definindo o tamanho do campo
		textDescricao.setFont(new Font("Arial", Font.PLAIN, 12));
		textDescricao.setColumns(10);
		textDescricao.setBounds(77, 289, 381, 20);
		contentPane_1.add(textDescricao);
		
		JLabel labelDescricao = new JLabel("Descric\u00E3o");
		labelDescricao.setForeground(Color.WHITE);
		labelDescricao.setFont(new Font("Arial", Font.PLAIN, 12));
		labelDescricao.setBounds(10, 292, 132, 14);
		contentPane_1.add(labelDescricao);
		
		textCodEquipamento = new JTextField();
		//textCodEquipamento.setDocument( new DocumentoLimitado(1) ); //definindo o tamanho do campo
		textCodEquipamento.setFont(new Font("Arial", Font.PLAIN, 12));
		textCodEquipamento.setColumns(10);
		textCodEquipamento.setBounds(154, 258, 304, 20);
		contentPane_1.add(textCodEquipamento);
		
		JLabel labelCodEquipamento = new JLabel("C\u00F3digo do Equipamento");
		labelCodEquipamento.setForeground(Color.WHITE);
		labelCodEquipamento.setFont(new Font("Arial", Font.PLAIN, 12));
		labelCodEquipamento.setBounds(10, 258, 150, 18);
		contentPane_1.add(labelCodEquipamento);
		
		JButton btPesquisar = new JButton("Pesquisar");
		btPesquisar.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				AcessoBD bd = new AcessoBD();
				if(bd.getConnection()){ 
					
					String sql ="select * from TB_EQUIPAMENTO where ID_EQUIPAMENTO = ? or  DESCRICAO = ? or VALOR_EQUIPAMENTO = ?"; // instrução executada no banco de dados.
					try {
						
						// Recebendo os valores inseridos.
						String  id = textCodEquipamento.getText(); // ID_EQUIPAMENTO		
						String  descricao = textDescricao.getText(); // DESCRICAO			
						String  valor = textValor.getText(); // VALOR_EQUIPAMENTO			
						// DT_ULTIMA_MAN
						
						
						bd.st = bd.con.prepareStatement(sql); // preparar a instrução para ser executada.
						bd.st.setString(1, textCodEquipamento.getText());
						bd.st.setString(2, textDescricao.getText());
						bd.st.setString(3, textValor.getText());
						bd.rs = bd.st.executeQuery(); // Obtém a posicao BOF da tabela e executa a Consulta.
						table_equipamentos.setModel(DbUtils.resultSetToTableModel(bd.rs));	
						}	
					
					catch(SQLException erro) { 
						System.out.println(erro); // mostra o erro encontrado quando tentou a conexão.
					}
					catch(NumberFormatException erro) { 
						System.out.println("Insira um dado para busca !"); // erro na leitura em caso de valor em branco.
					}
					finally {
						bd.close(); // encerra a conexão ao BD.
					}
				}
				else {
					JOptionPane.showMessageDialog(null, "Falha na conexão com o BD!"); // retorna a mensagem de falha de conexão ao BD.
				}
			}
		});
		btPesquisar.setForeground(Color.WHITE);
		btPesquisar.setFont(new Font("Arial", Font.BOLD, 12));
		btPesquisar.setBackground(new Color(0, 128, 0));
		btPesquisar.setBounds(486, 292, 122, 25);
		contentPane_1.add(btPesquisar);
		
		JButton btLimpar = new JButton("Limpar");
		btLimpar.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				// Limpando dados inseridos nas textboxs.
				textCodEquipamento.setText("");
				textDescricao.setText("");
				textValor.setText("");
				
			}
		});
		btLimpar.setForeground(Color.WHITE);
		btLimpar.setFont(new Font("Arial", Font.BOLD, 12));
		btLimpar.setBackground(new Color(0, 128, 0));
		btLimpar.setBounds(486, 334, 122, 25);
		contentPane_1.add(btLimpar);
		
		JButton btAtualizar = new JButton("Atualizar");
		btAtualizar.setForeground(Color.WHITE);
		btAtualizar.setFont(new Font("Arial", Font.BOLD, 12));
		btAtualizar.setBackground(new Color(0, 128, 0));
		btAtualizar.setBounds(612, 292, 122, 25);
		contentPane_1.add(btAtualizar);
		
		JButton btDeletar = new JButton("Deletar");
		btDeletar.setForeground(Color.WHITE);
		btDeletar.setFont(new Font("Arial", Font.BOLD, 12));
		btDeletar.setBackground(new Color(0, 128, 0));
		btDeletar.setBounds(612, 334, 122, 25);
		contentPane_1.add(btDeletar);
		
		JButton btNovoCadastro = new JButton("Novo Cadastro");
		btNovoCadastro.setForeground(Color.WHITE);
		btNovoCadastro.setFont(new Font("Arial", Font.BOLD, 12));
		btNovoCadastro.setBackground(new Color(0, 128, 0));
		btNovoCadastro.setBounds(486, 256, 248, 25);
		contentPane_1.add(btNovoCadastro);
		
		JLabel labelDataum = new JLabel("Data da \u00FAltima manuten\u00E7\u00E3o");
		labelDataum.setForeground(Color.WHITE);
		labelDataum.setFont(new Font("Arial", Font.PLAIN, 12));
		labelDataum.setBounds(122, 351, 158, 20);
		contentPane_1.add(labelDataum);
		
		JDateChooser dateChooserDataum = new JDateChooser();
		dateChooserDataum.setBounds(290, 351, 168, 20);
		contentPane_1.add(dateChooserDataum);
		
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 47, 730, 188);
		contentPane_1.add(scrollPane);
		
		table_equipamentos = new JTable();
		scrollPane.setViewportView(table_equipamentos);
		
		JButton btFiltroEquipamentos = new JButton("Filtrar Equipamentos");
		btFiltroEquipamentos.setForeground(Color.WHITE);
		btFiltroEquipamentos.setFont(new Font("Arial", Font.BOLD, 12));
		btFiltroEquipamentos.setBackground(new Color(0, 128, 0));
		btFiltroEquipamentos.setBounds(509, 13, 231, 25);
		contentPane_1.add(btFiltroEquipamentos);
	}
}
